variable "aws_ssm_document_content" {
  default = "{\n  \"schemaVersion\" : \"0.3\",\n  \"description\" : \"Composite document for Quick Setup Managing Instances association. This document ensures IAM role for instance profile is created in account with all required policies\",\n  \"assumeRole\" : \"{{AutomationAssumeRole}}\",\n  \"parameters\" : {\n    \"AutomationAssumeRole\" : {\n      \"type\" : \"String\"\n    },\n    \"InstanceId\" : {\n      \"type\" : \"String\"\n    },\n    \"IsPolicyAttachAllowed\" : {\n      \"type\" : \"String\"\n    }\n  },\n  \"mainSteps\" : [ {\n    \"outputs\" : [ {\n      \"Type\" : \"String\",\n      \"Name\" : \"existingInstanceProfileRoleName\",\n      \"Selector\" : \"$.Payload.RoleName\"\n    } ],\n    \"inputs\" : {\n      \"Script\" : \"import boto3\\n\\ndef getInstanceProfileName(events, context):\\n    ec2_client = boto3.client(\\\"ec2\\\")\\n    response = ec2_client.describe_instances(InstanceIds=[events[\\\"InstanceId\\\"]])\\n    if 'IamInstanceProfile' in response['Reservations'][0]['Instances'][0]:\\n        return {'RoleName': response['Reservations'][0]['Instances'][0]['IamInstanceProfile']['Arn'].split('/').pop()}\\n    return {'RoleName': 'NoRoleFound'}\",\n      \"Runtime\" : \"python3.6\",\n      \"InputPayload\" : {\n        \"InstanceId\" : \"{{InstanceId}}\"\n      },\n      \"Handler\" : \"getInstanceProfileName\"\n    },\n    \"name\" : \"getExistingRoleName\",\n    \"action\" : \"aws:executeScript\",\n    \"nextStep\" : \"branchIfProfileExists\"\n  }, {\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"StringEquals\" : \"NoRoleFound\",\n        \"Variable\" : \"{{getExistingRoleName.existingInstanceProfileRoleName}}\",\n        \"NextStep\" : \"createRoleIfNotExists\"\n      } ],\n      \"Default\" : \"checkIfPolicyAttachAllowed\"\n    },\n    \"name\" : \"branchIfProfileExists\",\n    \"action\" : \"aws:branch\"\n  }, {\n    \"inputs\" : {\n      \"Choices\" : [ {\n        \"StringEquals\" : \"true\",\n        \"Variable\" : \"{{IsPolicyAttachAllowed}}\",\n        \"NextStep\" : \"getRoleFromInstanceProfile\"\n      } ],\n      \"Default\" : \"createRoleIfNotExists\"\n    },\n    \"name\" : \"checkIfPolicyAttachAllowed\",\n    \"action\" : \"aws:branch\"\n  }, {\n    \"outputs\" : [ {\n      \"Type\" : \"String\",\n      \"Name\" : \"existingRoleName\",\n      \"Selector\" : \"$.InstanceProfile.Roles[0].RoleName\"\n    } ],\n    \"inputs\" : {\n      \"InstanceProfileName\" : \"{{getExistingRoleName.existingInstanceProfileRoleName}}\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"GetInstanceProfile\"\n    },\n    \"name\" : \"getRoleFromInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"nextStep\" : \"attachAmazonSSMManagedInstanceCoreToExistingRole\"\n  }, {\n    \"inputs\" : {\n      \"RoleName\" : \"{{getRoleFromInstanceProfile.existingRoleName}}\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\"\n    },\n    \"name\" : \"attachAmazonSSMManagedInstanceCoreToExistingRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"nextStep\" : \"attachAmazonSSMPatchAssociationToExistingRole\"\n  }, {\n    \"inputs\" : {\n      \"RoleName\" : \"{{getRoleFromInstanceProfile.existingRoleName}}\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMPatchAssociation\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\"\n    },\n    \"name\" : \"attachAmazonSSMPatchAssociationToExistingRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"isEnd\" : true\n  }, {\n    \"inputs\" : {\n      \"Path\" : \"/\",\n      \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"Description\" : \"EC2 role for SSM for Quick-Setup\",\n      \"AssumeRolePolicyDocument\" : \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"ec2.amazonaws.com\\\"},\\\"Action\\\":\\\"sts:AssumeRole\\\"}]}\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"CreateRole\"\n    },\n    \"name\" : \"createRoleIfNotExists\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"description\" : \"Create AmazonSSMRoleForInstancesQuickSetup Role For SSM Quick Setup\",\n    \"onFailure\" : \"Continue\",\n    \"nextStep\" : \"assertRoleForInstanceProfileExists\"\n  }, {\n    \"inputs\" : {\n      \"PropertySelector\" : \"$.Role.RoleName\",\n      \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"DesiredValues\" : [ \"AmazonSSMRoleForInstancesQuickSetup\" ],\n      \"Service\" : \"iam\",\n      \"Api\" : \"GetRole\"\n    },\n    \"name\" : \"assertRoleForInstanceProfileExists\",\n    \"action\" : \"aws:assertAwsResourceProperty\",\n    \"nextStep\" : \"attachAmazonSSMManagedInstanceCoreToRole\"\n  }, {\n    \"inputs\" : {\n      \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\"\n    },\n    \"name\" : \"attachAmazonSSMManagedInstanceCoreToRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"nextStep\" : \"attachAmazonSSMPatchAssociationToRole\"\n  }, {\n    \"inputs\" : {\n      \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"PolicyArn\" : \"arn:aws:iam::aws:policy/AmazonSSMPatchAssociation\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"AttachRolePolicy\"\n    },\n    \"name\" : \"attachAmazonSSMPatchAssociationToRole\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"nextStep\" : \"createInstanceProfileIfNotExists\"\n  }, {\n    \"inputs\" : {\n      \"InstanceProfileName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"CreateInstanceProfile\"\n    },\n    \"name\" : \"createInstanceProfileIfNotExists\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"nextStep\" : \"addRoleToInstanceProfile\"\n  }, {\n    \"inputs\" : {\n      \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"InstanceProfileName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n      \"Service\" : \"iam\",\n      \"Api\" : \"AddRoleToInstanceProfile\"\n    },\n    \"name\" : \"addRoleToInstanceProfile\",\n    \"action\" : \"aws:executeAwsApi\",\n    \"onFailure\" : \"Continue\",\n    \"nextStep\" : \"executeAttachIAMToInstance\"\n  }, {\n    \"maxAttempts\" : 10,\n    \"inputs\" : {\n      \"RuntimeParameters\" : {\n        \"AutomationAssumeRole\" : \"{{ AutomationAssumeRole }}\",\n        \"RoleName\" : \"AmazonSSMRoleForInstancesQuickSetup\",\n        \"InstanceId\" : \"{{ InstanceId }}\",\n        \"ForceReplace\" : false\n      },\n      \"DocumentName\" : \"AWS-AttachIAMToInstance\"\n    },\n    \"name\" : \"executeAttachIAMToInstance\",\n    \"action\" : \"aws:executeAutomation\",\n    \"timeoutSeconds\" : 60,\n    \"isEnd\" : true\n  } ]\n}"
  type    = string
}

variable "aws_ssm_document_document_format" {
  default = "JSON"
  type    = string
}

variable "aws_ssm_document_document_type" {
  default = "Automation"
  type    = string
}

variable "aws_ssm_document_name" {
  default = "AWSQuickSetup-CreateAndAttachIAMToInstance-tjdfj"
  type    = string
}

variable "aws_ssm_document_tags" {
  default {
    QuickSetupID      = "tjdfj"
    QuickSetupType    = "Host Management"
    QuickSetupVersion = "3.1"
  }

  type = map(string)
}

variable "aws_ssm_document_target_type" {
  default = "/AWS::EC2::Instance"
  type    = string
}
